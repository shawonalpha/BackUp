import matplotlib
import sys
matplotlib.use('Agg')

import matplotlib.pyplot as plt
import numpy as np

xpoints = np.array([0, 6])
ypoints = np.array([0, 250])

plt.plot(xpoints, ypoints)
plt.show()

#Two  lines to make our compiler able to draw:
plt.savefig(sys.stdout.buffer)
sys.stdout.flush()



print(matplotlib.__version__)

#I actually donno why, but executing this file on ubuntu python3 
# yiedls some really wierd stuffs

# after visually selecting a couple of line like this, press 
#: and write-->norm .
#
#get used to using period frequently
#var = 'i want a cat';
#var = 'i want a cat';
#var = 'i want a cat';
#var = 'i want a cat';
#var = 'i want a cat';
#var = 'i want a cat';
#var = 'i want a cat';
#var = 'i want a cat';
#var = 'i want a cat';
#var = 'i want a cat';
import time

start = time.time()


for i in range(5000):
    print('python '*i)


end = time.time()
n = (4999*5000)/2
result = end - start
print(result)
print(f'Python was printed %d time', n)
import datetime


"""This script is chiefly written to keep track of the users weight and give them appropriate advise on their diets.
the data is stored in   (health_record.txt file)  """


def weight_consultor(person, bmi, current_weight, required_weight, calorie):
    # height must be in m & weight in kg

    if bmi <= 24.5 or bmi <= 24.5:
        print(f'''
You\'ve a healthy weight.If you want to maintain this weight your daily calorie intake should be around:
{calorie} calories. But don\'t forget to exercise regularly and eat healthy foods.''')

    elif bmi > 24.500001 or bmi < 18.499999:
        weight_changes = current_weight - required_weight
        print(f'''
{person.capitalize()} your weight is not balanced.
In proportion to your physical structure, your ideal weight is {required_weight} kg.''')

        if weight_changes >= 0:
            change_type = 'lose'
        else:
            change_type = 'gain'
            weight_changes *= -1
            # corrects the gain and lose weight sign problem
        print(f'''
If you want to lead a healthy & happy life you should {change_type} {weight_changes} kg.
And your daily calorie intake should be around {calorie} calories.
Regardless of how fit you are, you should exercise regularly and eat less junk food.''')
    else:
        pass


def bmi_calculator(user_weight, user_height):
    # height in meter units
    bmi = user_weight / (user_height * user_height)
    return bmi


def ideal_weight_calculator(user_height):
    ideal_weight = 24.6 * (user_height * user_height)
    return ideal_weight


def bmr_calculator(user_gender, user_height, user_age, ideal_weight):
    # height must be in cm unit
    if user_gender == 'female':
        bmr = 665 + (9.6 * ideal_weight) + (1.8 * user_height) - (4.7 * user_age)
    else:
        bmr = 66 + (13.7 * ideal_weight) + (5 * user_height) - (6.8 * user_age)
    return bmr


def instruction_giver(sex, person, person_age):
    if person_age > 18:
        if sex == 'male':
            address = 'Mr.'
        else:
            address = 'Ms.'
    else:
        address = ''
    return print(f'''
Hello {address}{person}. Please answer the following questions as accurately as possible.
They\'re needed to provide you with accurate results.
Press Enter after typing the answers.''')


def calorie_calculator(user_activity, bmr):

    activity_coefficient = 1.2 + (int(user_activity) - 1) * 0.175
    # this line is used because the coefficient increases 0.175 for every activity level from 1 to 5
    calorie_requirement = activity_coefficient * bmr
    return calorie_requirement


# Name

print('What\'s your name?')
while True:
    name_input = input('Ans: ')
    if len(name_input) < 3:
        print('Name should be at least 3 characters long.')
    elif len(name_input) > 50:
        print('Name should be at least 50 characters long.')
    else:
        name = name_input.capitalize()
        break

# _Gender

print('''
If you\'re a Female, Enter: M
If you\'re a Male, Enter: F  ''')
while True:
    gender_input = input('Gender: ')
    gender_validity = gender_input.isalpha()
    if gender_validity:
        gender_input.lower()

        if gender_input in ('male', 'female', 'm', 'f'):

            if gender_input == 'm' or gender_input == 'male':
                gender_input = 'male'
            else:
                gender_input = 'female'
            gender = gender_input
            break
        else:
            print('Please enter your gender correctly\nM or F ?')
    else:
        print('''
Please enter your gender correctly.
M or F ?''')

# _Age

print(f'''
What\'s your age?''')
while True:
    age_input = input('Ans: ')
    age_validity = age_input.isnumeric()
    if age_validity:
        age = int(age_input)
        break
    else:
        print(f'{name} you must enter your age numeric form i.e(39, 18, 4, 11)')


# Gives instructions for the User
instruction_giver(gender, name, age)


# _Weight

print(f'''
What\'s your current weight (Kg)? ''')
while True:
    weight_input = input('Ans: ')
    weight_validity = weight_input.isnumeric()
    if weight_validity:
        weight = int(weight_input)
        break
    else:
        print('Please Enter your weight in numeric values, i.e (50, 69 etc.)')


# _Height

print('''
*********************************************

Enter your height in the following manner,for example:- \nIf you are 5 foot 4 inch tall, enter your height like this :
*Foot: 5
*Inches: 4
Now, enter your height.\n''')


while True:
    try:
        foots = int(input('*Foot: '))
        inches = float(input('*Inches: '))
        break
    
    except:
        print('Please enter you height properly')
        continue    
# ******************************************
# Man there is just no end to innovations
#like i had to reformate the above code for mode than a dozen of times
    

# we don't want alphabets in this input
    #foot_validity = height_input_foot.isalpha()
    #inches_validity = height_input_inches.isalpha()


    #is_foot_int = isinstance(height_input_foot, int)
    #is_inch_float = isinstance(height_input_foot, float)

    #if is_foot_int and is_inch_float:

        #if is_foot_int and is_inch_float:
#
#        elif height_input_foot == '' or height_input_inches == '':
#            print('Please enter you height.')
#            continue
#        else:
#            break
#            print('operation failed')

  #      else:
  #          print('Please enter you height properly.')
  #          continue
  #  else:
  #      print('Please enter your height in numeric form...')

# _Activity

print('''
  Almost done
  Select your Activity Level:\n
1) Lazy, no work or exercise at all.
2) slightly active 2-3 days a week
3) active, exercise 2-3 days a week
4) very active, exercise 7 days a week
5) Hyper active, a lot of exercise and sports every single day
             ''')
while True:
    activity_input = input('Level: ')
    activity_validity = activity_input.isdigit()
    if activity_validity:

        if activity_input in ('1', '2', '3', '4', '5'):
            activity = activity_input
            break

        elif activity_input not in ('1', '2', '3', '4', '5'):
            print('Please select your Activity Level from 1 - 5')

        else:
            print('Please select your Activity Level from 1 - 5 ')


def ft_meter_converter(foot, inch):
    meter_height = (foot * 12 + inch) * 0.0254
    return meter_height


user_height_m = ft_meter_converter(foots, inches)
user_height_cm = (user_height_m * 100)
# the  user_bmr will be used to calculate daily calorie intake


user_bmi = bmi_calculator(weight, user_height_m)
preferable_weight = ideal_weight_calculator(user_height_m)

user_bmr = bmr_calculator(gender, user_height_cm, age, preferable_weight)
required_calorie = calorie_calculator(activity, user_bmr)

weight_consultor(name, user_bmr, weight, preferable_weight, required_calorie)

date = datetime.datetime.now()

# _Records
with open('health_records.txt', 'a') as records:
    records.write(f'#{name} :-\n')
    records.write(f'''
Gender: {gender}
Age: {age}
Height: {foots}'{inches}
Weight: {weight}
Activity_level: {activity}
Consulting_Date: {date}\n\n''')


if __name__ == '__main__':
    print('\nThank you for using my programme.')
else:
    print('\nIf you face any problems email me at alphaimon@gmail.com')
